// Generated by CoffeeScript 1.6.1
var Gadget;

Gadget = function() {};

Gadget.isShiny = function() {
  return "you bet";
};

Gadget.prototype.setPrice = function(price) {
  return this.price = price;
};

module("Gadget", {
  setup: function() {
    return this.iphone = new Gadget();
  }
});

test("the constructor Gadget has a public static method (public class method)", function() {
  return ok(Gadget.isShiny() === "you bet");
});

test("an instance of Gadget does NOT have access its constructor's public static methods", function() {
  return throws(function() {
    return this.iphone.isShiny();
  }, TypeError);
});

test("calling a static method from an instance WON'T work", function() {
  return ok(this.iphone.isShiny === void 0);
});

test("creating an instance and calling a method does work", function() {
  return ok(this.iphone.setPrice(500));
});

test("attempting to call an instance method statically won't work", function() {
  return ok(Gadget.setPrice === void 0);
});

test("setting up a facade to allow instance access to its static methods", function() {
  var GadgetDbl, iphoneLocal;
  GadgetDbl = (function() {
    return Gadget;
  })();
  iphoneLocal = new GadgetDbl();
  GadgetDbl.prototype.isShiny = GadgetDbl.isShiny;
  return ok(iphoneLocal.isShiny() === "you bet");
});
